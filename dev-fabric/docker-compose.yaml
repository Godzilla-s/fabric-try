version: '2'

volumes:
  orderer.example.com:
  peer0.org1.example.com:

networks: 
  example: 

services:
  orderer.example.com:
    container_name: orderer.example.com
    image: ${RESPOSITY}/fabric-orderer:${IMAGE_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./channel-config/genesis.block:/var/hyperledger/orderer/genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls:/var/hyperledger/orderer/tls
      - orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - example
#
#  couchdb.peer0.org1.example.com:
#    container_name: couchdb.peer0.org1.example.com
#    image: ${RESPOSITY}/fabric-couchdb:0.4.10
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    ports:
#      - 5984:5984
#    networks:
#      - example
  
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: ${RESPOSITY}/fabric-peer:${IMAGE_TAG}
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_example
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      # 领导选举
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false  # 设置为true，静态选举，默认一个节点
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Chaincode相关
      - CORE_CHAINCODE_LOGGING_SHIM=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=debug
      - CORE_CHAINCODE_BUILDER=${RESPOSITY}/fabric-ccenv:${CCENV_TAG}
      - CORE_CHAINCODE_GOLANG_RUNTIME=${RESPOSITY}/fabric-baseos:${BASEOS_TAG}
      - CORE_CHAINCODE_EXECUTETIMEOUT=120s
#      # CouchDB
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer0.org1.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
      - peer0.org1.example.com:/var/hyperledger/production
    ports:
      - 7051:7051
      - 7053:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      - example
    depends_on:
      #- couchdb.peer0.org1.example.com
      - orderer.example.com

  client:
    container_name: client
    image: ${RESPOSITY}/fabric-tools:${IMAGE_TAG}
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-files/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-files/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-files/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-files/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CA_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-files/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-files
      - ./channel-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-config
      #- ../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode
      - /Users/zuvakin/workspace/src/github.com/hyperledger/fabric-chaincode-java:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
      #- peer0.org2.example.com
    networks: 
      - example
  